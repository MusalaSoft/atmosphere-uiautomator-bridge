apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'eu.appsatori.fatjar'

sourceCompatibility = 1.6
targetCompatibility = 1.6

version = '0.0.1'
jar {
    manifest {
        attributes 'Implementation-Title': 'Atmosphere UIAutomator Bridge',
                   'Implementation-Version': version
    }
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'eu.appsatori:gradle-fatjar-plugin:0.3'
    }
}

project.ext {
    dexDir = new File('build/dex')
    dexedJar = "${buildDir}/dex/${project.name}-${version}.jar"
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile fileTree(dir: androidSdkHome + '/platforms/' + androidSdkTarget, include: '*.jar'), {
        ext {
            fatJarExclude = true
        }
    }
    // TODO: Change this after uploading the file to a Maven repo
    compile files('libs/uiautomator_api18_dex2jar.jar'), {
        ext {
            fatJarExclude = true
        }
    }
    compile 'de.mindpipe.android:android-logging-log4j:1.0.3'
    compile ('com.musala.atmosphere:atmosphere-ad-commons:0.0.1') {
        exclude group: 'android'
    }
    compile 'commons-jxpath:commons-jxpath:1.3'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:1.9.5'
}

sourceSets {
    main.java.srcDir 'src'
    test.java.srcDir 'test'
}

publishing {
    publications {
        atmosphereUIAutomatorBridge(MavenPublication) {
            groupId 'com.musala.atmosphere'
            artifactId 'atmosphere-uiautomator-bridge'
            version version

            artifact source: project.dexedJar, extension: 'jar'
        }
    }

    repositories {
        mavenLocal()
    }
}

fatJar {
    doLast {
        tasks.dex.execute()
    }
}

// Credits here: http://wiliamsouza.github.io/#/2013/10/30/android-uiautomator-gradle-build-system
task dex(dependsOn: fatJar, type:Exec) {
    project.dexDir.mkdirs()
    workingDir '.'
    commandLine androidSdkHome + '/' + androidSdkBuildToolsDir + '/' + 'dx', '--dex', '--no-strict', '--output=' + project.dexedJar, jar.archivePath
}

publishToMavenLocal.dependsOn fatJar

tasks.withType(JavaCompile) {
    options.bootClasspath = bootClasspath
}

tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class"
}
